# ~/.nanorc
#
# This is a comprehensive configuration file for GNU nano, aimed at improving usability and readability.
# It includes syntax highlighting, customized keybindings, user-friendly interface settings, and integrated linters for supported languages.
#
# Implementation of Python and Bash were focused on
#
# Open source, please use it!
#
# Created 5-25-2025
# Tested on modern versions of nano
#
## =========================
## General Configuration
## =========================

## Disable auto-indentation.
unset autoindent

## Set tab size to 4 spaces.
set tabsize 4

## Backup files to filename~.
set backup

## Do case-sensitive searches by default.
set casesensitive

## Remember the cursor position for next time.
set positionlog

## Display cursor position in the status bar.
set constantshow

## Remember search/replace history across sessions.
set historylog

## Show line numbers.
set linenumbers

## Enable lock files for file safety.
set locking

## Disable mouse support (for terminal compatibility).
unset mouse

## Hide shortcut list at the bottom.
set nohelp

## Enable word wrapping across lines.
set softwrap

## Auto-save on exit.
set tempfile

## Show visual whitespace using Unicode symbols.
set whitespace "\u00BB\u00B7"

## Detect word boundaries using punctuation.
set wordbounds

## Allow backspace/delete to erase selected region.
set zap

## =========================
## Interface Color Scheme
## =========================

set titlecolor cyan,black
set statuscolor cyan,black
set errorcolor brightwhite,red
set selectedcolor black,magenta
set stripecolor cyan,black
set numbercolor cyan,black
set keycolor cyan,black
set functioncolor cyan

## =========================
## Include Base Syntax Definitions
## =========================

include /usr/share/nano/nanorc.nanorc

## =========================
## Syntax Highlighting Rules
## =========================

# --- nanorc Syntax ---
syntax nanorc "\\.?nanorc$"
comment "#"

icolor brightred "^[[:space:]]*((un)?(bind|set)|include|syntax|header|magic|comment|linter|i?color|extendsyntax).*"
icolor brightgreen "^[[:space:]]*(set|unset)[[:space:]]+(afterends|allow_insecure_backup|atblanks|autoindent|backup|backwards|boldtext|breaklonglines|casesensitive|constantshow|cutfromcursor|emptyline|finalnewline|historylog|jumpyscrolling|linenumbers|locking|morespace|mouse|multibuffer|noconvert|nohelp|nopauses|nonewlines|nowrap|positionlog|preserve|quickblank|quiet|rebinddelete|rebindkeypad|regexp|showcursor|smarthome|smooth|softwrap|suspend|tabstospaces|tempfile|trimblanks|unix|view|wordbounds|zap)\>"
icolor yellow "^[[:space:]]*set[[:space:]]+((error|function|key|number|selected|status|stripe|title)color)[[:space:]]+(bright)?(white|black|red|blue|green|yellow|magenta|cyan|normal)?(,(white|black|red|blue|green|yellow|magenta|cyan|normal))?\>"
icolor brightgreen "^[[:space:]]*set[[:space:]]+(backupdir|brackets|errorcolor|functioncolor|keycolor|matchbrackets|numbercolor|operatingdir|punct|quotestr|selectedcolor|speller|statuscolor|stripecolor|titlecolor|whitespace|wordchars)[[:space:]]+"
icolor brightgreen "^[[:space:]]*set[[:space:]]+(fill[[:space:]]+-?[[:digit:]]+|(guidestripe|tabsize)[[:space:]]+[1-9][0-9]*)\>"
icolor green "^[[:space:]]*((un)?(bind|set)|include|syntax|header|magic|comment|linter|extendsyntax)\>"
color brightmagenta "([[:space:]]|(start|end)=)\".+\"([[:space:]]|$)"
icolor yellow "^[[:space:]]*i?color[[:space:]]*(bright)?(white|black|red|blue|green|yellow|magenta|cyan|normal)?(,(white|black|red|blue|green|yellow|magenta|cyan|normal))?\>"
icolor magenta "^[[:space:]]*i?color\>" "\<(start|end)="
color brightblue "(^|[[:space:]]+)#.*"
color cyan "^[[:space:]]*##.*"

# --- Shell Scripts ---
syntax sh "(\.sh|\.(a|ba|c|da|k|mk|pdk|tc|z)(sh|shrc|sh_profile)|/(etc/|\.)profile)$"
header "^#!.*/(((a|ba|c|da|k|mk|pdk|tc|z)?sh)|(busybox|env) +sh|openrc-run|runscript)"
magic "(POSIX|Bourne-Again) shell script.*text"
linter shellcheck
comment "#"
color cyan "\<(break|case|continue|do|done|elif|else|esac|exit|fi|for|function|if|in|read|return|select|shift|then|time|until|while)\>"
color brightgreen "\$\<[A-Za-z_\-]{2,}\>"
color brightgreen "[\$\*\`]" "\<(true)\>"
color brightyellow "[{}():;|`<>&/\\]"
color blue "(\]|\[)"
color brightblue "#.*"
color ,white "[[:space:]]+$"
color white "\.*"

# --- Python ---
syntax python "\.py$"
header "^#!.*python"
magic "Python script"
linter pylint
comment "#"
color brightblue "def [0-9A-Za-z_]+"
color brightcyan "\<(and|as|assert|async|await|break|class|continue|def|del|elif|else|except|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|raise|return|try|while|with|yield)\>"
color brightcyan "\<(exec|print)([[:blank:]]|$)"
color brightmagenta "\<(False|None|True)\>"
color brightgreen "'([^'\\]|\\.)*'|'''"
color brightgreen "\"([^"\\]|\\.)*\"|\"\"\""
color normal "'''|\"\"\""
color brightred "(^|[[:blank:]])#.*"
color brightwhite,yellow "(FIXME|TODO|XXX)"
color ,green "[[:space:]]+$"

## =========================
## Key Bindings
## =========================

unbind ^Q main
unbind ^A main
unbind ^Z main
unbind ^W main
unbind ^S main
unbind ^X main
unbind ^E main
unbind ^D main
unbind ^C main
unbind ^R main
unbind ^F main
unbind ^V main
unbind ^T main
unbind ^G main
unbind ^B main
unbind ^Y main
unbind ^H main
unbind ^N main
unbind ^U main
unbind ^J main
unbind ^K main
unbind ^O main
unbind ^L main
unbind ^P main
unbind ^] main
unbind ^\\ main

bind ^A complete main
bind ^W whereis main
bind ^S savefile main
bind ^X exit main
bind ^F redo main
bind ^D undo main
bind ^R replace main
bind ^V paste main
bind ^K cut main
bind ^L insert main
bind ^O writeout main
bind ^T linter main
bind ^Q linenumbers main
bind ^H backspace main
bind Ins chopwordleft main
bind Del chopwordright main
bind ^G gotoline main
bind ^I casesens search
